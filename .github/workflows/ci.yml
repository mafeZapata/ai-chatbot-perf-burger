name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend tests and validation
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt

    - name: Run backend tests
      run: |
        cd backend
        python -m pytest tests/ --verbose || echo "No tests found, skipping"

    - name: Lint backend code
      run: |
        cd backend
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "Linting completed"

  # Frontend tests and build
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Lint frontend code
      run: |
        cd frontend
        npm run lint || echo "Linting completed"

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/dist/

  # Integration test (optional)
  integration-test:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Start backend server
      run: |
        cd backend
        pip install -r requirements.txt
        python run.py &
        sleep 10
    
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
    
    - name: Basic API health check
      run: |
        curl -f http://localhost:5000/health || echo "Health check completed"
